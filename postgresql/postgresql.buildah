FROM crucible.lab:4000/oci/libressl:latest
ARG BDATE="$(date --rfc-3339=date)"
ARG GHEAD="$(git rev-parse HEAD)"
LABEL nulllabs.build-date="$BDATE" \
nulllabs.name="postgresql" \
nulllabs.maintainer="kbaegis@gmail.com" \
nulllabs.description="Build container for catalyst/buildah/jenkins CI" \
nulllabs.usage="https://services.home/git/NullLabs/oci/src/master/README.md" \
nulllabs.url="https://services.home/git/NullLabs/oci/src/master/README.md" \
nulllabs.vcs-url="https://services.home/git/NullLabs/oci/src/master/" \
nulllabs.vcs-ref="$GHEAD" \
nulllabs.vendor="NullLabs" \
nulllabs.version="beta-0.0.1" \
nulllabs.schema-version="1.0" \
nulllabs.docker.cmd="docker run -d --name nulllabs-postgresql -l nulllabs.image=crucible.lab:4000/oci/postgresql crucible.lab:4000/oci/postgresql:latest" \
nulllabs.docker.cmd.devel="docker run -it --name nulllabs-postgresql-tmp -l nulllabs.image=crucible.lab:4000/oci/postgresql --entrypoint=/bin/bash crucible.lab:4000/oci/postgresql:latest" \
nulllabs.docker.cmd.test="docker run -it --name nulllabs-postgresql-test -l nulllabs.image=crucible.lab:4000/oci/postgresql --rm --entrypoint=/bin/bash crucible.lab:4000/oci/postgresql:latest" \
nulllabs.docker.cmd.debug="docker exec -it nulllabs-postgresql bash" \
nulllabs.docker.cmd.help="docker exec -it nulllabs-postgresql /usr/local/bin/entrypoint.sh --help" \
nulllabs.docker.params="REPO=,THREADS="

ENV PGDATA="/etc/postgresql/" \
  DATADIR="/var/lib/postgresql/data/" \
  ENCODING="UTF8"

RUN printf 'dev-db/postgresql -kerberos ldap libressl nls pam perl python readline server ssl threads uuid xml zlib\napp-crypt/mit-krb5 keyutils libressl nls openldap pkinit threads' >>/etc/portage/package.use/postgresql \
 && emerge -bg dev-db/postgresql \
 && $HOME/.build/rsync.sh \
 && sed -i "s#PGDATA=.*#PGDATA=\"$PGDATA\"#g" /etc/conf.d/postgresql-* \
 && sed -i "s#DATA_DIR=.*#DATA_DIR=\"$DATADIR\"#g" /etc/conf.d/postgresql-* \
 && sed -i "s#PG_INITDB_OPTS=.*#PG_INITDB_OPTS=\"--encoding=$ENCODING\"#g" /etc/conf.d/postgresql-* \
 && emerge --config dev-db/postgresql \
 && emerge --depclean --with-bdeps=n

RUN emerge --config dev-db/postgresql \
 && mkdir /run/postgresql/ \
 && mkdir /etc/ssl/postgresql/ \
 && mkdir /var/tmp/sql/ \
 && echo '' >/var/log/postgresql.log

ADD conf.d/* /etc/conf.d/
ADD postgresql/* /etc/postgresql-10/
ADD bin/* /usr/local/bin/
ADD --chown=postgres:postgres .x509.replication/* /etc/ssl/postgresql/
ADD --chown=postgres:postgres .x509/* /etc/ssl/postgresql/

RUN chown postgres:postgres /run/postgresql/ \
 && chown postgres:postgres /var/log/postgresql.log \
 && chmod 640 /etc/ssl/postgresql/* \
 && chmod 600 /etc/ssl/postgresql/*.key.pem

ADD sql/* /var/tmp/sql/
RUN su postgres -c "/usr/lib64/postgresql-10/bin/pg_ctl -D $DATADIR -l /var/log/postgresql.log start" \
 && for i in $(ls /var/tmp/sql/);do psql -U postgres </var/tmp/sql/$i;done  \
 && su postgres -c "/usr/lib64/postgresql-10/bin/pg_ctl -D $DATADIR -l /var/log/postgresql.log stop"

EXPOSE 5432/tcp

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

#CMD ["-D","/var/lib/postgresql/10/data","-l","/var/log/pg.log","start"]

HEALTHCHECK --interval=30s --timeout=5s CMD /usr/local/bin/healthcheck.sh
