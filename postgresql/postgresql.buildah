FROM crucible.lab:4000/oci/libressl:latest
ARG GENESIS="crucible.lab:4000/oci/libressl"
ARG BDATE="$(date --rfc-3339=date)"
ARG GHEAD="$(git rev-parse HEAD)"
ARG REPO="https://server.lab/git"
ARG NAME="postgresql"
ARG URI="crucible.lab:4000/oci/postgresql"
ARG NAMESPACE="nulllabs"
LABEL $NAMESPACE.build-date="$BDATE" \
  $NAMESPACE.name="$NAME" \
  $NAMESPACE.maintainer="kbaegis@gmail.com" \
  $NAMESPACE.description="SQL Database for NullLabs." \
  $NAMESPACE.usage="https://$REPO/NullLabs/oci/src/master/$NAME/README.md" \
  $NAMESPACE.url="https://$REPO/NullLabs/oci/src/master/$NAME/README.md" \
  $NAMESPACE.vcs-url="https://services.home/git/NullLabs/oci/src/master/$NAME/" \
  $NAMESPACE.vcs-ref="$GHEAD" \
  $NAMESPACE.vendor="NullLabs" \
  $NAMESPACE.version="beta-0.0.2" \
  $NAMESPACE.schema-version="1.0" \
  $NAMESPACE.docker.cmd="docker run -d -p 5432:5432 --name $NAMESPACE-$NAME -l $NAMESPACE.image=$URI $URI:latest" \
  $NAMESPACE.docker.cmd.devel="docker run -it -p 5432:5432 --name $NAMESPACE-$NAME-dev --rm -l $NAMESPACE.image=$URI --entrypoint=/bin/bash $URI:latest" \
  $NAMESPACE.docker.cmd.test="docker run -it -p 5432:5432 --name $NAMESPACE-$NAME-test --rm -l $NAMESPACE.image=$URI --entrypoint=/usr/local/bin/test.sh $URI:latest" \
  $NAMESPACE.docker.cmd.debug="docker exec -it $NAMESPACE-$NAME bash" \
  $NAMESPACE.docker.cmd.help="docker exec -it $NAMESPACE-$NAME /usr/local/bin/entrypoint.sh --help" \
  $NAMESPACE.docker.params="" \
  $NAMESPACE.cri.cmd="" \
  $NAMESPACE.cri.cmd.devel="podman --cgroup-manager cgroupfs run --entrypoint=/bin/bash $URI:latest" \
  $NAMESPACE.cri.cmd.test="podman --cgroup-manager cgroupfs run --entrypoint=/usr/local/bin/test.sh $URI:latest" \
  $NAMESPACE.cri.cmd.debug="" \
  $NAMESPACE.cri.cmd.help="" \
  $NAMESPACE.cri.params=""

#PGDATA="/etc/postgresql/" \
ENV PGDATA="/var/lib/postgresql/data/" \
  DATADIR="/var/lib/postgresql/data/" \
  ENCODING="UTF8" \
  TZ="America/Denver" \
  PGPORT="5432" \
  GENESIS="$GENESIS:$BDATE ($GHEAD)"

RUN printf 'dev-db/postgresql -kerberos ldap libressl nls pam perl python readline server ssl threads uuid xml zlib\napp-crypt/mit-krb5 keyutils libressl nls openldap pkinit threads' >>/etc/portage/package.use/postgresql \
 && emerge -bg dev-db/postgresql \
 && $HOME/.build/rsync.sh \
 && sed -i "s#PGDATA=.*#PGDATA=\"$PGDATA\"#g" /etc/conf.d/postgresql-* \
 && sed -i "s#DATA_DIR=.*#DATA_DIR=\"$DATADIR\"#g" /etc/conf.d/postgresql-* \
 && sed -i "s#PG_INITDB_OPTS=.*#PG_INITDB_OPTS=\"--encoding=$ENCODING\"#g" /etc/conf.d/postgresql-* \
 && emerge --config dev-db/postgresql \
 && emerge --depclean --with-bdeps=n

RUN mkdir /run/postgresql/ \
 && mkdir /etc/ssl/postgresql/ \
 && mkdir /var/tmp/sql/ \
 && echo '' >/var/log/postgresql.log

ADD conf.d/* /etc/conf.d/
ADD postgresql/* /etc/postgresql-10/
ADD bin/* /usr/local/bin/
ADD --chown=postgres:postgres .x509.replication/* /etc/ssl/postgresql/
ADD --chown=postgres:postgres .x509/* /etc/ssl/postgresql/

RUN chown postgres:postgres /run/postgresql/ \
 && chown postgres:postgres /var/log/postgresql.log \
 && chown postgres:root /etc/ssl/postgresql/* \
 && chmod 640 /etc/ssl/postgresql/* \
 && chmod 600 /etc/ssl/postgresql/*.key.pem \
 && ln -s /etc/postgresql-10/ /etc/postgresql

ADD sql/* /var/tmp/sql/
RUN su postgres -c "/usr/lib64/postgresql-10/bin/pg_ctl -D $DATADIR -l /var/log/postgresql.log start" \
 && for i in $(ls /var/tmp/sql/);do psql -U postgres </var/tmp/sql/$i;done  \
 && su postgres -c "/usr/lib64/postgresql-10/bin/pg_ctl -D $DATADIR -l /var/log/postgresql.log stop"

EXPOSE 5432/tcp

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

#CMD ["-D","/var/lib/postgresql/10/data","-l","/var/log/pg.log","start"]

HEALTHCHECK --interval=30s --timeout=5s CMD /usr/local/bin/healthcheck.sh
