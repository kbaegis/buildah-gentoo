FROM crucible.lab:4000/oci/libressl:latest
ARG REPO="https://server.lab/git"
ARG NAME="radius"
ARG URI="crucible.lab:4000/oci/radius"
ARG NAMESPACE="nulllabs"
LABEL $NAMESPACE.build-date="$BDATE" \
  $NAMESPACE.name="$NAME" \
  $NAMESPACE.maintainer="kbaegis@gmail.com" \
  $NAMESPACE.description="NullLabs Webserver." \
  $NAMESPACE.usage="https://$REPO/NullLabs/oci/src/master/$NAME/README.md" \
  $NAMESPACE.url="https://$REPO/NullLabs/oci/src/master/$NAME/README.md" \
  $NAMESPACE.vcs-url="https://services.home/git/NullLabs/oci/src/master/$NAME/" \
  $NAMESPACE.vcs-ref="$GHEAD" \
  $NAMESPACE.vendor="NullLabs" \
  $NAMESPACE.version="beta-0.0.2" \
  $NAMESPACE.schema-version="1.0" \
  $NAMESPACE.docker.cmd="docker run -d -p 1812:1812/udp -p 1813:1813/udp --restart always --name $NAMESPACE-$NAME -l $NAMESPACE.image=$URI $URI:latest" \
  $NAMESPACE.docker.cmd.devel="docker run -it -p 1812:1812/udp -p 1813:1813/udp --rm --name $NAMESPACE-$NAME-dev -l $NAMESPACE.image=$URI --entrypoint=/bin/bash $URI:latest" \
  $NAMESPACE.docker.cmd.test="docker run -it -p 1812:1812/udp -p 1813:1813/udp --rm --name $NAMESPACE-$NAME-test -l $NAMESPACE.image=$URI --entrypoint=/usr/local/bin/test.sh $URI:latest" \
  $NAMESPACE.docker.cmd.debug="docker exec -it $NAMESPACE-$NAME bash" \
  $NAMESPACE.docker.cmd.help="docker exec -it $NAMESPACE-$NAME /usr/local/bin/entrypoint.sh --help" \
  $NAMESPACE.docker.params="" \
  $NAMESPACE.cri.cmd="" \
  $NAMESPACE.cri.cmd.devel="podman --cgroup-manager cgroupfs run --entrypoint=/bin/bash $URI:latest" \
  $NAMESPACE.cri.cmd.test="podman --cgroup-manager cgroupfs run --entrypoint=/usr/local/bin/test.sh $URI:latest" \
  $NAMESPACE.cri.cmd.debug="" \
  $NAMESPACE.cri.cmd.help="" \
  $NAMESPACE.cri.params="DATABASESRV,GITROOT,PACKAGE"

ENV DATABASESRV="server.mgmt" \
    GITROOT="https://server.lab/git/NullLabs" \
    PACKAGE="yes" \
    GENESIS="$GENESISARG" \
    SELF="$SELFARG"

RUN printf "dev-db/postgresql -server\n" >>/etc/portage/package.use/freeradius \
 && emerge -bg sys-libs/talloc dev-util/cmake dev-db/postgresql dev-libs/libpqxx \
 && git clone $GITROOT/libkqueue.git /tmp/libkqueue \
 && cd /tmp/libkqueue/ \
 && cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib $(pwd) \
 && make $MAKEOPTS \
 && make install \
 && git clone $GITROOT/freeradius-server.git /tmp/freeradius-server \
 && cd /tmp/freeradius-server \
 && git checkout v3.0.x \
 && ./configure \
 && make $MAKEOPTS \
 && make install \
 && sed -i "s#^default_bits.*#default_bits = 8192#g" /usr/local/etc/raddb/certs/ca.cnf \
 && useradd radius
#RUN /etc/raddb/certs/bootstrap

ADD --chown=radius:radius raddb/* /usr/local/etc/raddb/
ADD --chown=radius:radius mods-available/* /usr/local/etc/raddb/mods-available/
ADD --chown=radius:radius sites-available/* /usr/local/etc/raddb/sites-available/
ADD --chown=radius:radius bin/* /usr/local/bin/
#ADD --chown=radius:radius mods-config/files/* /usr/local/etc/raddb/mods-config/files/

RUN ln -s /usr/local/etc/raddb/mods-available/sql.postgresql /usr/local/etc/raddb/mods-enabled/sql \
 && ln -s /usr/local/etc/raddb/mods-available/ippool /usr/local/etc/raddb/mods-enabled/ippool \
 && rm -r /usr/local/etc/raddb/certs/ \
 && mkdir -p /etc/ssl/libpq-radius/ 
ADD --chown=radius:radius .x509/* /usr/local/etc/raddb/certs/
ADD --chown=radius:radius .x509.db/* /etc/ssl/libpq-radius/
RUN cd /usr/local/etc/raddb/certs/ \
 && c_rehash . \
 && chmod -R 775 /usr/local/etc/raddb/ \
 && chown radius:radius /usr/local/etc/raddb/ \
 && chmod 600 /etc/ssl/*/*.key.pem \
 && chown radius:radius /etc/ssl/*/*.key.pem

RUN $HOME/.build/rsync.sh

#EXPOSE 2870/tcp 6758/tcp
EXPOSE 1812/udp 1813/udp

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

CMD ["-X"]

HEALTHCHECK --interval=30s --timeout=5s CMD /usr/local/bin/healthcheck.sh
