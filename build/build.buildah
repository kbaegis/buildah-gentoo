FROM crucible.lab:4000/oci/go:latest
ARG BDATE="$(date --rfc-3339=date)"
ARG GHEAD="$(git rev-parse HEAD)"
ARG GBRANCH="master"
ARG REPO="https://server.lab/git"
ARG URI="crucible.lab:4000/oci/build"
ARG NAME="build"
ARG NAMESPACE="nulllabs"
LABEL $NAMESPACE.build-date="$BDATE" \
  $NAMESPACE.name="$NAME" \
  $NAMESPACE.maintainer="kbaegis@gmail.com" \
  $NAMESPACE.description="Build container for catalyst/buildah/jenkins CI" \
  $NAMESPACE.usage="https://$REPO/NullLabs/oci/src/master/build/README.md" \
  $NAMESPACE.url="https://$REPO/NullLabs/oci/src/master/build/README.md" \
  $NAMESPACE.vcs-url="https://services.home/git/NullLabs/oci/src/master/build/" \
  $NAMESPACE.vcs-ref="$GHEAD" \
  $NAMESPACE.vendor="NullLabs" \
  $NAMESPACE.version="beta-0.0.1" \
  $NAMESPACE.schema-version="1.0" \
  $NAMESPACE.docker.cmd="docker run -it --rm --name $NAMESPACE-$NAME --privileged -l $URI $URI:latest" \
  $NAMESPACE.docker.cmd.devel="docker run -it --name $NAMESPACE-$NAME-tmp --privileged -l $NAMESPACE.image=$URI --rm --entrypoint=/bin/bash $URI:latest" \
  $NAMESPACE.docker.cmd.test="podman --cgroup-manager cgroupfs run --entrypoint=/usr/local/bin/test.sh $URI:latest" \
  $NAMESPACE.docker.cmd.debug="docker exec -it nulllabs-build bash" \
  $NAMESPACE.docker.cmd.help="docker exec -it nulllabs-build /usr/local/bin/entrypoint.sh --help" \
  $NAMESPACE.docker.params="" \
  $NAMESPACE.cri.cmd="" \
  $NAMESPACE.cri.cmd.devel="podman --cgroup-manager cgroupfs run --entrypoint=/bin/bash $URI:latest" \
  $NAMESPACE.cri.cmd.test="podman --cgroup-manager cgroupfs run --entrypoint=/usr/local/bin/test.sh $URI:latest" \
  $NAMESPACE.cri.cmd.debug="" \
  $NAMESPACE.cri.cmd.help="" \
  $NAMESPACE.cri.params=""

ENV REGISTRY="crucible.lab:4000" \
  NAMESPACE="/oci/" \
  REPO="https://server.lab/git" \
  BUILDAH_TAG="v1.3"

ADD .x509/* /root/.ssh/
ADD bin/* /usr/local/bin/
#RUN git clone -c http.sslVerify=false https://server.lab/git/NullLabs/oci.git /opt/oci/ \
#RUN chmod 600 ~/.ssh/* \
# && git clone https://server.lab/git/NullLabs/oci.git /opt/oci/ \
# && git -C /opt/oci checkout $GBRANCH \
# && git -C /opt/oci/ submodule init \
# && git -C /opt/oci/ submodule update --recursive --remote
RUN printf 'dev-util/bats ~amd64\napp-emulation/skopeo ~amd64\ndev-util/catalyst ~amd64\ndev-python/snakeoil ~amd64\ndev-python/pydecomp ~amd64\napp-emulation/cri-o ~amd64\nnet-misc/cni-plugins ~amd64\ndev-util/ostree ~amd64\n' >>/etc/portage/package.accept_keywords \
 && printf 'FEATURES="-usersandbox -sandbox"\n' >> /etc/portage/env/nosandbox.conf \
 && printf 'dev-go/go-md2man nosandbox.conf\napp-emulation/skopeo nosandbox.conf\n' >> /etc/portage/package.env \
 && printf 'autocmd BufNewFile,BufRead *.buildah set syntax=dockerfile\n' >> ~/.vimrc \
 && printf "app-emulation/cri-o device-mapper seccomp btrfs ostree\ndev-util/pkgconfig internal-glib\nsys-apps/help2man -nls\n" >>/etc/portage/package.use/build \
 && emaint -a all \
 && emerge -DNu world --with-bdeps=y \
 && emerge dev-go/sanitized-anchor-name dev-python/pygpgme dev-libs/libassuan sys-libs/libseccomp app-emulation/skopeo sys-fs/fuse sys-libs/libselinux app-admin/sudo dev-go/go-md2man dev-python/snakeoil dev-util/catalyst dev-libs/glib app-misc/jq net-dns/bind-tools \
 && mkdir -p /etc/catalyst/portage/package.use \
 && mkdir -p /etc/catalyst/portage/package.mask \
 && mkdir -p /var/tmp/catalyst/builds/default/ \
 && mkdir -p /var/tmp/catalyst/builds/hardened/ \
 && mkdir -p /usr/portage/distfiles/ \
 && chmod -R 777 /usr/lib/go/pkg/linux_amd64/* \
 && emerge app-emulation/runc \
 && $HOME/.build/finalize.sh \
 && git clone $REPO/NullLabs/ostree.git /tmp/ostree-git/ \
 && /tmp/ostree-git/autogen.sh \
 && cd /tmp/ostree-git/ \
 && ./configure \
 && make -j$THREADS\
 && make install \
 && ln -s /usr/local/lib64/libostree-1.* /usr/lib64/ \
 && ln -s /usr/local/lib64/pkgconfig/ostree-1.pc /usr/lib64/pkgconfig/ \
 && go get github.com/projectatomic/buildah \
 && cd $GOPATH/src/github.com/projectatomic/buildah/ \
 && git -C $GOPATH/src/github.com/projectatomic/buildah checkout $BUILDAH_TAG \
 && make -j$THREADS \
 && make install \
 && mkdir -p $GOPATH/src/github.com/projectatomic/libpod/ \
 && git clone $REPO/NullLabs/libpod.git $GOPATH/src/github.com/projectatomic/libpod/ \
 && cd $GOPATH/src/github.com/projectatomic/libpod/ \
 && make -j$THREADS \
 && make install \
 && git clone https://github.com/kubernetes-incubator/cri-o $GOPATH/src/github.com/kubernetes-incubator/cri-o \
 && cd $GOPATH/src/github.com/kubernetes-incubator/cri-o \
 && mkdir bin \
 && make bin/conmon -j$THREADS \
 && make install \
 && git clone https://github.com/containernetworking/plugins.git $GOPATH/src/github.com/containernetworking/plugins \
 && cd $GOPATH/src/github.com/containernetworking/plugins \
 && ./build.sh \
 && mkdir -p /usr/libexec/cni \
 && cp bin/* /usr/libexec/cni \
 && printf "\nhost server.lab\nHostName server.lab\nIdentityFile ~/.ssh/id_rsa.private\nUser git\n" >>~/.ssh/config \
 && chmod 600 /root/.ssh/* \
 && ssh-keygen -R server.lab \
 && git clone -c http.sslVerify=false https://server.lab/git/NullLabs/oci.git /opt/oci/ \
 && git -C /opt/oci checkout $GBRANCH \
 && git -C /opt/oci/ submodule init \
 && git -C /opt/oci/ submodule update --recursive --remote --merge \
 && ln -s /opt/oci/pybuild.py /usr/local/bin/build \
 && useradd jenkins -G wheel \
 && printf "%%wheel ALL=(ALL) NOPASSWD: ALL\n" >>/etc/sudoers \
 && mkdir -p /etc/containers/ \
 && printf "[registries.search]\nregistries = ['$REGISTRY', 'docker.io', 'registry.fedoraproject.org', 'registry.access.redhat.com']\n\n[registries.insecure]\nregistries = ['$REGISTRY']\n\n[registries.block]\nregistries = ['docker.io']" >/etc/containers/registries.conf
ADD catalyst/* /etc/catalyst/
ADD catalyst-portage/* /etc/catalyst/portage/
ADD catalyst-package.use/* /etc/catalyst/portage/package.use/
ADD catalyst-package.mask/* /etc/catalyst/porgage/package.mask/
ADD spec/* /var/tmp/catalyst/builds/default/

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["-vpcib","all"]
